{
  "stats": {
    "suites": 1,
    "tests": 3,
    "passes": 3,
    "pending": 0,
    "failures": 0,
    "start": "2024-09-25T13:55:51.693Z",
    "end": "2024-09-25T13:56:53.568Z",
    "duration": 61875,
    "testsRegistered": 3,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "408eb5cc-04f9-422b-9233-b05952c15a10",
      "title": "",
      "fullFile": "cypress/e2e/VSDigital/backOffice/01_auth.cy.js",
      "file": "cypress/e2e/VSDigital/backOffice/01_auth.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "f1956124-0ebf-4cee-a7c6-67b10fc30192",
          "title": "Auth Test Cases",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should be able to verify invalid login creds",
              "fullTitle": "Auth Test Cases should be able to verify invalid login creds",
              "timedOut": null,
              "duration": 23139,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.intercept(\"POST\", `${Cypress.env(\"BACKOFFICE_LOGIN_LINK\")}/vsdigitaltest.onmicrosoft.com/B2C_1_SignUp_SignIn_Widget/SelfAsserted`).as(\"getUser\");\nhomePage.visit();\nconst {\n  emailTxtLocator,\n  passwordTxtLocator,\n  loginBtnLocator,\n  errorTxtLocator\n} = auth.elements;\ncy.origin(Cypress.env(\"BACKOFFICE_LOGIN_LINK\"), {\n  args: {\n    emailTxtLocator,\n    passwordTxtLocator,\n    loginBtnLocator,\n    errorTxtLocator\n  }\n}, ({\n  emailTxtLocator,\n  passwordTxtLocator,\n  loginBtnLocator,\n  errorTxtLocator\n}) => {\n  cy.get(emailTxtLocator).clear().type(\"te1234@gmail.com\");\n  cy.get(passwordTxtLocator).clear().type(\"test123\");\n  cy.get(loginBtnLocator).click();\n  cy.get(errorTxtLocator).find(\"p\").should(\"have.text\", \"We can't seem to find your account\");\n});",
              "err": {},
              "uuid": "72208e8e-b350-4518-aa13-0b1465086737",
              "parentUUID": "f1956124-0ebf-4cee-a7c6-67b10fc30192",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should be able to verify login successful",
              "fullTitle": "Auth Test Cases should be able to verify login successful",
              "timedOut": null,
              "duration": 23500,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.intercept(\"POST\", \"/api/v1/Dashboard/GetBackofficeDashboardDetails\").as(\"verifyLogin\");\nauth.login(cred);\ncy.wait(1000);\ncy.wait(\"@verifyLogin\").then(interception => {\n  expect(interception.response.statusCode).to.eq(200);\n  const responseBody = interception.response.body;\n  cy.log(responseBody);\n  expect(responseBody).to.have.property(\"status\", \"Success\");\n});\nauth.elements.usernameTxt().contains(cred.expected);",
              "err": {},
              "uuid": "29a05f78-0922-4229-b128-e19da93d39f5",
              "parentUUID": "f1956124-0ebf-4cee-a7c6-67b10fc30192",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should be able to verify login and logout successful",
              "fullTitle": "Auth Test Cases should be able to verify login and logout successful",
              "timedOut": null,
              "duration": 12354,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "auth.login(cred);\ncy.wait(1000);\nauth.logout();\ncy.wait(5000);\ncy.origin(Cypress.env(\"BACKOFFICE_LOGIN_LINK\"), {}, () => {\n  cy.url().should(\"include\", \"b2clogin.com\");\n});",
              "err": {},
              "uuid": "20b02c3a-058b-460f-bc14-b7ddeddf1135",
              "parentUUID": "f1956124-0ebf-4cee-a7c6-67b10fc30192",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "72208e8e-b350-4518-aa13-0b1465086737",
            "29a05f78-0922-4229-b128-e19da93d39f5",
            "20b02c3a-058b-460f-bc14-b7ddeddf1135"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 58993,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.0.1"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": false,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": {
        "charts": true,
        "reportPageTitle": "custom-title",
        "embeddedScreenshots": true,
        "inlineAssets": true,
        "saveAllAttempts": false,
        "overwrite": false,
        "html": false,
        "json": true,
        "reportDir": "cypress/reports/html/.jsons"
      },
      "version": "6.2.0"
    }
  }
}